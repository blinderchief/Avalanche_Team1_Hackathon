[project]
name = "spectraq-agent-backend"
version = "0.1.0"
description = "SpectraQ AI Agent Backend with MCP Integration"
authors = [
    {name = "SpectraQ Team", email = "team@spectraq.io"}
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.25.2",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "celery>=5.3.4",
    "websockets>=12.0",
    "asyncpg>=0.29.0",
    "aiosqlite>=0.20.0",
    "aiofiles>=23.2.1",
    "python-dotenv>=1.0.0",
    "openai>=1.3.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.2",
    "langchain-core>=0.1.0",
    "langgraph>=0.0.20",
    "mcp>=0.4.0",
    "ccxt>=4.1.0",
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "ta>=0.10.2",
    "python-socketio>=5.10.0",
    "loguru>=0.7.2",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "tenacity>=8.2.3"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "httpx>=0.25.2"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0"
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=app --cov-report=term-missing"
